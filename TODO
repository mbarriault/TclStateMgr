To do list for MVTH.


Fri Feb 27 00:38:56 EST 2004
********
We could really benefit from making libutils dynamically reloadable.
It's irritating to have to restart mvth when we make a change
to libutils.so. Could probably load this at same time
as plugins are loaded, but explicitly load this first.

Sun Feb 22 01:26:40 EST 2004
********
Have the engine serve scene descriptions on some network port.
(If this was on a wireless device, a navigating agent could
received this info untethered, or for the vibroglove, it could
receive the scene info wirelessly.)

Sun Feb 22 01:24:41 EST 2004
********
Test out ground plane (GP) fitting.
Test segmenting particles into GP and nonGP.
Put everything on slower hardware and test.

Sun Feb 22 01:18:31 EST 2004
********
Have a way to draw the particles in different colors
according to some kind of "classification" array.
(Like in tipsy for dark/gas/star/whatever.)
Goal is to allow say finding the ground plane, and then
classifying each particle as belonging or not
to the ground plane. Store the classifications in an array,
and then be able to draw them color coded to see what is
the ground plane, and what are obstacles.)

Sun Feb 22 01:18:06 EST 2004
********
Locking using semaphores is done and seems to be working.

Sat Feb 21 16:29:47 EST 2004
*********

Ok. We need semaphores to protect access to the mmaped files.
The image_t structure now has two semaphores rlock and wlock.
They are modified (and should only be modified) through the
functions in semaphore.[hc] lock_for_write() and lock_for_read().
A nice bit of code has to be added to the various filters/copiers/
whatever so that the engine (mvth_net) locks the images
before modification, and the viewer (mmviewer) locks them for reading.
If a read lock is held, the write lock cannot be grabbed, and vice
versa. Nearly all of the filters and some of the base commands
will need to be modified to use the new locking mechanism.

*********
Wed Feb  4 23:58:26 EST 2004

Ok, the server payload stuff works better now.
mmapped files now contain timestamps,
but updates are not atomic, but not sure how
to make this clean between processes. Probably
will just use lockfiles.

(Update Sun Feb 22 01:21:45 EST 2004:
This is now handled by the semaphores in the image_t structure.)


*********
Mon Jan 19 22:13:53 EST 2004

Attempted (poorly) to make the payload transfers more robust.
But we really need to detect any lines which start with a period
and repackage them with an additional period. That way, any
lines received with a leading period should have that first period
stripped before interpretation. Received lines with only a single
period are therefore payload termination lines. Will fix this on the next
patch.

(Updated Sun Feb 22 01:22:21 EST 2004: DONE! a while ago.)

**********
Wed Jan  7 20:23:00 EST 2004

Want to make interface command line oriented.
Will then modify the GUI front end to be simply that --
a front-end to the CLI.

Images in the CLI version will simply be data structures
stored in an array. The image data itself will be mmap'ed
to files so that the GUI version (or a web server version)
can readily access the data as fast as possible.

The requires several major changes:

1) The code must be modified so that the commands
   take in image index, instead of a node and frame number.
	 Sun Feb 22 01:23:03 EST 2004: DONE!
2) The images must be mmap'ed.
	 Sun Feb 22 01:23:03 EST 2004: DONE!
3) A data structure holding the image data must be specified.
   This is what will be stored in the mmap'ed file.
	 Sun Feb 22 01:23:03 EST 2004: DONE!
4) An array of data structures pointing to structures
   holding the relevant file information and pointers for the
	 mmap'ed data must be defined.
	 Sun Feb 22 01:23:03 EST 2004: DONE!
5) The GUI must be modified to make use of the mmap'ed
   files (read only), and map the correct image indexes
	 to the given node/frame number.
	 ( Sun Feb 22 01:24:03 EST 2004: GUI is now just a viewer.)
6) The GUI must be made completely standalone.
	 Sun Feb 22 01:23:03 EST 2004: DONE!
7) The CLI must be made completely standalone.
	 Sun Feb 22 01:23:03 EST 2004: DONE!
8) For video steams, some kind of semaphore scheme must
   be adopted so that the GUI knows when the data in an
	 image mmap'ed file has completed an update.
	 Sun Feb 22 01:23:03 EST 2004: DONE!
